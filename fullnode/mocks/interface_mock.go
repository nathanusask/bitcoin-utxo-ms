// Code generated by MockGen. DO NOT EDIT.
// Source: ./interface.go

// Package fullnode is a generated GoMock package.
package fullnode

import (
	reflect "reflect"

	fullnode "github.com/ABMatrix/bitcoin-utxo-ms/fullnode"
	gomock "github.com/golang/mock/gomock"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// GetBestBlock mocks base method.
func (m *MockInterface) GetBestBlock() *fullnode.Block {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBestBlock")
	ret0, _ := ret[0].(*fullnode.Block)
	return ret0
}

// GetBestBlock indicates an expected call of GetBestBlock.
func (mr *MockInterfaceMockRecorder) GetBestBlock() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBestBlock", reflect.TypeOf((*MockInterface)(nil).GetBestBlock))
}

// GetBestBlockHeight mocks base method.
func (m *MockInterface) GetBestBlockHeight() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBestBlockHeight")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetBestBlockHeight indicates an expected call of GetBestBlockHeight.
func (mr *MockInterfaceMockRecorder) GetBestBlockHeight() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBestBlockHeight", reflect.TypeOf((*MockInterface)(nil).GetBestBlockHeight))
}

// GetBlock mocks base method.
func (m *MockInterface) GetBlock(hash string) *fullnode.Block {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlock", hash)
	ret0, _ := ret[0].(*fullnode.Block)
	return ret0
}

// GetBlock indicates an expected call of GetBlock.
func (mr *MockInterfaceMockRecorder) GetBlock(hash interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlock", reflect.TypeOf((*MockInterface)(nil).GetBlock), hash)
}

// GetBlockAtHeight mocks base method.
func (m *MockInterface) GetBlockAtHeight(height int) *fullnode.Block {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlockAtHeight", height)
	ret0, _ := ret[0].(*fullnode.Block)
	return ret0
}

// GetBlockAtHeight indicates an expected call of GetBlockAtHeight.
func (mr *MockInterfaceMockRecorder) GetBlockAtHeight(height interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockAtHeight", reflect.TypeOf((*MockInterface)(nil).GetBlockAtHeight), height)
}
