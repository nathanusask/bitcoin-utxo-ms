// Code generated by MockGen. DO NOT EDIT.
// Source: ./interface.go

// Package mongo is a generated GoMock package.
package mongo

import (
	context "context"
	reflect "reflect"

	mongo "github.com/ABMatrix/bitcoin-utxo-ms/mongo"
	gomock "github.com/golang/mock/gomock"
	bson "go.mongodb.org/mongo-driver/bson"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// DeleteMany mocks base method.
func (m *MockInterface) DeleteMany(ctx context.Context, uniqueKeys []bson.M) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteMany", ctx, uniqueKeys)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteMany indicates an expected call of DeleteMany.
func (mr *MockInterfaceMockRecorder) DeleteMany(ctx, uniqueKeys interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteMany", reflect.TypeOf((*MockInterface)(nil).DeleteMany), ctx, uniqueKeys)
}

// GetMaxHeight mocks base method.
func (m *MockInterface) GetMaxHeight(ctx context.Context) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMaxHeight", ctx)
	ret0, _ := ret[0].(int)
	return ret0
}

// GetMaxHeight indicates an expected call of GetMaxHeight.
func (mr *MockInterfaceMockRecorder) GetMaxHeight(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMaxHeight", reflect.TypeOf((*MockInterface)(nil).GetMaxHeight), ctx)
}

// InsertMany mocks base method.
func (m *MockInterface) InsertMany(ctx context.Context, utxos []*mongo.UTXO) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertMany", ctx, utxos)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertMany indicates an expected call of InsertMany.
func (mr *MockInterfaceMockRecorder) InsertMany(ctx, utxos interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertMany", reflect.TypeOf((*MockInterface)(nil).InsertMany), ctx, utxos)
}

// ListCoinsForAddress mocks base method.
func (m *MockInterface) ListCoinsForAddress(ctx context.Context, address string) ([]*mongo.UTXO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCoinsForAddress", ctx, address)
	ret0, _ := ret[0].([]*mongo.UTXO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCoinsForAddress indicates an expected call of ListCoinsForAddress.
func (mr *MockInterfaceMockRecorder) ListCoinsForAddress(ctx, address interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCoinsForAddress", reflect.TypeOf((*MockInterface)(nil).ListCoinsForAddress), ctx, address)
}
